{"version":3,"sources":["utils/csv-utils.tsx","utils/types.tsx","hooks/use-keyboard-control.tsx","utils/styles.tsx","components/Pyramid.tsx","Presentation.tsx","serviceWorker.ts","index.tsx","images/lentes.svg"],"names":["parseLine","line","result","replace","match","g1","g2","g3","data","undefined","push","getTotals","values","map","_","index","element","reduce","acc","curr","parseCSV","DataState","csvData","split","title","shift","sources","slice","times","dataMaxValue","left","nextLine","group","value","parsed","Number","parseFloat","isNaN","localMaxValue","a","b","Math","min","max","totalsLeft","right","negative","totalsRight","totals","pos","factor","label","radix","floor","log10","maxValue","ceil","pow","fixMaxValue","lastSource","i","length","useKeybordControl","dataState","setFrame","speed","repeat","timer","React","useRef","useEffect","handleKeyPressed","event","key","current","Ready","window","clearInterval","setInterval","advance","stop","currFrame","prevFrame","forced","nextFrame","document","addEventListener","removeEventListener","monospace","baseLabelStyles","fontFamily","fontSize","letterSpacing","padding","fill","stroke","strokeWidth","centeredLabelStyles","textAnchor","darkNumberStyles","fontWeight","verticalAnchor","singleLineGridStyle","grid","datum","tick","purpleBarStyle","yellowBarStyle","backgroundStyle","leftNumberStyle","rightNumberStyle","titleStyle","leftTextStyle","yearTextStyle","totalsTextStyle","totalsNumberStyle","makeTheme","width","height","yearLabelsFontSize","axisFontSize","baseProps","baseAxisStyle","axis","strokeLinecap","strokeLinejoin","axisLabel","chart","dependentAxis","style","ticks","size","tickLabels","independentAxis","bar","Background","props","myWidth","myHeight","top","bottom","x","y","href","lentes","Pyramid","useState","Loading","setDataState","frame","file","theme","axios","get","process","then","catch","Error","useKeyboardControl","horizontal","singleQuadrantDomainPadding","domainPadding","domain","text","crossAxis","tickCount","tickFormat","t","abs","offsetX","barRatio","toLocaleString","toFixed","defaultProps","colors","primary","secondary","tertiary","Presentation","src","textAlign","bg","alignSelf","viewBox","background","boxSizing","display","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.9d1c0d3b.chunk.js","sourcesContent":["import type { PlotData, Data } from './types';\n\n\nfunction parseLine(line: string) {\n  const lineRegex = /(?!\\s*$)\\s*(?:'([^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*)'|\"([^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*)\"|([^,\\s]*(?:\\s+[^,\\s]+)*))\\s*(?:,|$)/g;\n  const result: string[] = [];\n  line.replace(\n    lineRegex, (match: string, g1: string, g2: string, g3: string) => {\n      let data = '';\n      if (g1 !== undefined) {\n        data = g1;\n      } else if (g2 !== undefined) {\n        data = g2;\n      } else if (g3 !== undefined) {\n        data = g3;\n      }\n      data = data.replace(/\\\\'/g, '\\'');\n      data = data.replace(/\\\\\"/g, '\"');\n      data = data.replace(/\\\\n/g, '\\n');\n      result.push(data);\n      return '';\n    }\n  );\n  return result;\n}\n\nfunction getTotals(data: PlotData[]) {\n  return data[0].values.map((_, index) =>\n    data.map((element) =>\n      element.values[index]).reduce((acc, curr) => acc + curr, 0)\n  );\n}\n\nfunction addTotals(positive: number[], negative: number[]) {\n  return positive.map((pos, index) => pos - negative[index]);\n}\n\nfunction fixMaxValue(value: number) {\n  const radix = Math.floor(Math.log10(value));\n  const reducedValue = Math.ceil(value / Math.pow(10, radix));\n  const maxValue = reducedValue * Math.pow(10, radix);\n\n  let factor: number;\n  let label: string;\n\n  if (radix >= 9) {\n    factor = Math.pow(10, 9);\n    label = 'Miles de millones de personas';\n  } else if (radix >= 6) {\n    factor = Math.pow(10, 6);\n    label = 'Millones de personas';\n  } else if (radix >= 3) {\n    factor = Math.pow(10, 3);\n    label = 'Miles de personas';\n  } else {\n    factor = 1;\n    label = 'Personas';\n  }\n\n  return ({ maxValue, factor, label });\n}\n\nfunction parseCSV(csvData: string): Data {\n  const data = csvData.split('\\n').map(parseLine);\n  const title = data.shift()![0];\n  const sources = data.shift()!.slice(1);\n  const times = data.shift()!.slice(1);\n\n  let dataMaxValue = 0;\n\n  const left: PlotData[] = [];\n\n  let nextLine = data.shift();\n  while (nextLine !== undefined && nextLine[0] !== 'Mujeres') {\n    const group = nextLine.shift()!;\n    const values = nextLine.map((value) => {\n      const parsed = Number.parseFloat(value);\n      if (Number.isNaN(parsed)) return 0;\n      return -parsed;\n    });\n    const localMaxValue = -values.reduce((a, b) => Math.min(a, b));\n    dataMaxValue = Math.max(dataMaxValue, localMaxValue);\n    left.push({ group, values });\n    nextLine = data.shift();\n  }\n\n  const totalsLeft = getTotals(left);\n\n  const right: PlotData[] = [];\n\n  nextLine = data.shift();\n  while (nextLine !== undefined && nextLine[0] !== undefined) {\n    const group = nextLine!.shift()!;\n    const values = nextLine.map((value) => {\n      const parsed = Number.parseFloat(value);\n      if (Number.isNaN(parsed)) return 0;\n      return parsed;\n    });\n    const localMaxValue = values.reduce((a, b) => Math.max(a, b));\n    dataMaxValue = Math.max(dataMaxValue, localMaxValue);\n    right.push({ group, values });\n    nextLine = data.shift();\n  }\n\n  const totalsRight = getTotals(right);\n\n  const totals = addTotals(totalsRight, totalsLeft);\n\n  const { maxValue, factor, label } = fixMaxValue(dataMaxValue);\n\n  let lastSource = '';\n  for (let i = 0; i < sources.length; i += 1) {\n    if (sources[i] === '') {\n      sources[i] = lastSource;\n    } else {\n      lastSource = sources[i];\n    }\n  }\n\n  return ({\n    title,\n    sources,\n    times,\n    left,\n    right,\n    totals,\n    totalsLeft,\n    totalsRight,\n    maxValue,\n    factor,\n    label\n  });\n}\n\nexport default parseCSV;","\nexport type PlotData = {\n  group: string,\n  values: number[],\n};\n\nexport type Data = {\n  title: string,\n  sources: string[],\n  times: string[],\n  left: PlotData[],\n  right: PlotData[],\n  totals: number[],\n  totalsLeft: number[],\n  totalsRight: number[],\n  maxValue: number,\n  factor: number,\n  label: string,\n};\n\nexport enum DataState {\n  Ready,\n  Loading,\n  Error,\n}","import React from 'react';\nimport { DataState, Data } from '../utils/types';\n\n\nfunction useKeybordControl(\n  dataState: DataState,\n  data: Data,\n  setFrame: React.Dispatch<React.SetStateAction<number>>,\n  speed: number,\n  repeat: boolean,\n) {\n  const timer = React.useRef<number | undefined>(undefined);\n\n  React.useEffect(() => {\n    function handleKeyPressed(event: KeyboardEvent) {\n      if (event.key === ' ') {\n        playPause();\n      } else if (event.key === 'ArrowUp') {\n        stop();\n        back();\n      } else if (event.key === 'ArrowDown') {\n        stop();\n        advance(true);\n      } else if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n        stop();\n      }\n    }\n\n    function advance(forced = false) {\n      if (dataState === DataState.Ready) {\n        setFrame((currFrame) => {\n          let nextFrame = currFrame + 1;\n          if (nextFrame >= data.times.length) {\n            if (forced || repeat) {\n              nextFrame = 0;\n            } else {\n              stop();\n              nextFrame = currFrame;\n            }\n          }\n          return nextFrame;\n        });\n      }\n    }\n\n    function back() {\n      if (dataState === DataState.Ready) {\n        setFrame((currFrame) => {\n          let prevFrame = currFrame - 1;\n          if (prevFrame < 0) {\n            prevFrame = data.times.length - 1;\n          }\n          return prevFrame;\n        });\n      }\n    }\n\n    function play() {\n      if (dataState === DataState.Ready) {\n        window.clearInterval(timer.current);\n        timer.current = window.setInterval(() => advance(), 1000 / speed);\n      }\n    }\n\n    function stop() {\n      window.clearInterval(timer.current);\n      timer.current = undefined;\n    }\n\n    function playPause() {\n      if (timer.current === undefined) {\n        play();\n      } else {\n        stop();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyPressed);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPressed);\n    };\n  }, [data, dataState, setFrame, speed, repeat]);\n\n\n}\n\nexport default useKeybordControl;","import '../fonts/fonts.css';\n\n// Colors\nexport const darkBlue = '##22466a';\nexport const yellow = '#fffd38';\nexport const lightBlue = '#e2f0fc';\nexport const lightGreen = '#9dfecd';\nexport const purple = '#a05fde';\nexport const darkYellow = '#f4f754';\n\n// Typography\nconst sansSerif = \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\";\nconst monospace = \"'Fira Mono', 'Courier New', Courier, monospace\";\nconst letterSpacing = 'normal';\nconst fontSize = 11;\n\n// Strokes\nconst strokeLinecap = 'round';\nconst strokeLinejoin = 'round';\n\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize,\n  letterSpacing,\n  padding: 6,\n  fill: yellow,\n  stroke: 'transparent',\n  strokeWidth: 0,\n};\n\nconst centeredLabelStyles = {\n  textAnchor: 'middle',\n  ...baseLabelStyles,\n};\n\nconst darkNumberStyles = {\n  ...baseLabelStyles,\n  fill: darkBlue,\n  fontFamily: monospace,\n  fontWeight: 700,\n  verticalAnchor: 'start',\n};\n\nexport const singleLineGridStyle = {\n  grid: {\n    stroke: (datum: { tick: number }) => datum.tick !== 0 ? 'transparent' : lightGreen\n  }\n};\n\nexport const purpleBarStyle = {\n  data: {\n    fill: purple\n  }\n};\n\nexport const yellowBarStyle = {\n  data: {\n    fill: darkYellow\n  }\n};\n\nexport const backgroundStyle = {\n  fill: lightBlue,\n  stroke: lightGreen,\n  strokeWidth: 1,\n};\n\nexport const leftNumberStyle = {\n  ...darkNumberStyles,\n  textAnchor: 'start',\n} as React.CSSProperties;\n\nexport const rightNumberStyle = {\n  ...darkNumberStyles,\n  textAnchor: 'end',\n} as React.CSSProperties;\n\nexport const titleStyle = {\n  ...centeredLabelStyles,\n  fontSize: 14,\n  fontWeight: 900,\n  verticalAnchor: 'start',\n} as React.CSSProperties;\n\nexport const leftTextStyle = {\n  ...baseLabelStyles,\n  fontSize: 7,\n  textAnchor: 'start',\n  verticalAnchor: 'end',\n} as React.CSSProperties;\n\nexport const yearTextStyle = {\n  ...baseLabelStyles,\n  textAnchor: 'end',\n  verticalAnchor: 'end',\n  fontSize: 14,\n  fontWeight: 900,\n} as React.CSSProperties;\n\nexport const totalsTextStyle = {\n  ...baseLabelStyles,\n  fontFamily: monospace,\n  textAnchor: 'end',\n  verticalAnchor: 'end',\n} as React.CSSProperties;\n\nexport const totalsNumberStyle = {\n  ...totalsTextStyle,\n  textAnchor: 'start',\n} as React.CSSProperties;\n\n\nfunction makeTheme(\n  width: number,\n  height: number,\n  yearLabelsFontSize: number,\n  axisFontSize: number,\n) {\n  const baseProps = {\n    width,\n    height,\n    padding: 50,\n  };\n\n  const baseAxisStyle = {\n    axis: {\n      fill: 'transparent',\n      stroke: lightGreen,\n      strokeWidth: 2,\n      strokeLinecap,\n      strokeLinejoin,\n    } as React.CSSProperties,\n    axisLabel: {\n      ...baseLabelStyles,\n      padding: 20,\n      fontSize: axisFontSize + 2,\n    } as React.CSSProperties,\n    grid: {\n      stroke: 'transparent',\n      strokeWidth: 0,\n    },\n  };\n\n  const theme = {\n    chart: {\n      ...baseProps,\n    },\n    dependentAxis: {\n      ...baseProps,\n      style: {\n        ...baseAxisStyle,\n        ticks: {\n          size: 4,\n          stroke: lightGreen,\n          strokeWidth: 2,\n          strokeLinecap,\n          strokeLinejoin,\n        } as React.CSSProperties,\n        tickLabels: {\n          ...baseLabelStyles,\n          fontSize: axisFontSize,\n          padding: 1,\n        },\n      },\n    },\n    independentAxis: {\n      ...baseProps,\n      style: {\n        ...baseAxisStyle,\n        ticks: {\n          strokeWidth: 0,\n        },\n        tickLabels: {\n          ...baseLabelStyles,\n          fontSize: yearLabelsFontSize,\n        }\n      },\n    },\n    bar: {\n      ...baseProps,\n      style: {\n        data: {\n          fill: purple,\n          stroke: 'black',\n          strokeWidth: .2,\n        }\n      }\n    }\n  };\n\n  return theme;\n\n}\n\nexport default makeTheme;","import React from 'react';\nimport axios from 'axios';\nimport { Heading } from 'spectacle';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryLabel } from 'victory';\nimport parseCSV from '../utils/csv-utils';\nimport { DataState } from '../utils/types';\nimport type { Data, PlotData } from '../utils/types';\nimport useKeyboardControl from '../hooks/use-keyboard-control';\nimport makeTheme, {\n  backgroundStyle,\n  singleLineGridStyle,\n  purpleBarStyle,\n  yellowBarStyle,\n  titleStyle,\n  leftTextStyle,\n  yearTextStyle,\n  totalsTextStyle,\n  totalsNumberStyle,\n  leftNumberStyle,\n  rightNumberStyle,\n} from '../utils/styles';\nimport lentes from '../images/lentes.svg';\n\n\ntype PyramidProps = {\n  file: string,\n  width?: number,\n  height?: number,\n  padding?: {\n    top: number,\n    bottom: number,\n    left: number,\n    right: number,\n  },\n  yearLabelsFontSize?: number,\n  axisFontSize?: number,\n  speed?: number,\n  repeat?: boolean,\n};\n\nPyramid.defaultProps = {\n  width: 560,\n  height: 300,\n  padding: {\n    top: 50,\n    bottom: 50,\n    left: 70,\n    right: 30\n  },\n  yearLabelsFontSize: 9,\n  axisFontSize: 10,\n  speed: 15,\n  repeat: false,\n};\n\ntype BackgroundProps = {\n  width: number,\n  height: number,\n  padding: {\n    top: number,\n    bottom: number,\n    left: number,\n    right: number,\n  }\n};\n\nfunction Background(props: BackgroundProps) {\n  const myWidth = props.width - props.padding.left - props.padding.right;\n  const myHeight = props.height - props.padding.top - props.padding.bottom;\n  const imageFillX = 0.5;\n  const imageFillY = 0.8;\n  const imageMargin = 10;\n\n  return (\n    <>\n      <rect\n        x={props.padding.left}\n        y={props.padding.top}\n        width={myWidth}\n        height={myHeight}\n        style={backgroundStyle}\n      />\n      <image\n        href={lentes}\n        x={props.padding.left + imageMargin}\n        y={props.padding.top + imageMargin}\n        width={(myWidth / 2) * imageFillX}\n        height={myHeight * imageFillY}\n      />\n      <image\n        href={lentes}\n        x={props.width - props.padding.right\n          - imageMargin - imageFillX * (myWidth / 2)}\n        y={props.padding.top + imageMargin}\n        width={(myWidth / 2) * imageFillX}\n        height={myHeight * imageFillY}\n      />\n    </>\n  );\n}\n\nfunction Pyramid(props: PyramidProps) {\n  const [dataState, setDataState] = React.useState(DataState.Loading);\n  const [frame, setFrame] = React.useState(0);\n  const data = React.useRef<Data | null>(null);\n\n  const labelMargin = 2;\n\n  const {\n    file,\n    width, height, padding,\n    yearLabelsFontSize, axisFontSize,\n    speed, repeat,\n  } = props;\n\n  const theme = makeTheme(width!, height!, yearLabelsFontSize!, axisFontSize!);\n\n  React.useEffect(() => {\n    setDataState(DataState.Loading);\n    axios.get(`${process.env.PUBLIC_URL}/data/${file}.csv`).then((result) => {\n      data.current = parseCSV(result.data);\n      setDataState(DataState.Ready);\n    }).catch(() => setDataState(DataState.Error));\n  }, [file]);\n\n  useKeyboardControl(dataState, data.current!, setFrame, speed!, repeat!);\n\n  if (dataState === DataState.Loading) {\n    return (<Heading>Cargando...</Heading>);\n  }\n  if (dataState === DataState.Error) {\n    return (<Heading>Error...</Heading>);\n  }\n\n  return (\n    <VictoryChart\n      horizontal\n      singleQuadrantDomainPadding={{ x: true }}\n      padding={padding!}\n      domainPadding={{ x: 6 }}\n      domain={{ y: [-data.current!.maxValue, data.current!.maxValue] }}\n      theme={theme}\n    >\n      <Background\n        width={width!}\n        height={height!}\n        padding={padding!}\n      />\n      <VictoryLabel\n        x={width! / 2}\n        y={0}\n        style={titleStyle}\n        text={data.current!.title}\n      />\n      <VictoryLabel\n        x={padding!.left}\n        y={height}\n        style={leftTextStyle}\n        text={data.current!.sources[frame]}\n      />\n      <VictoryLabel\n        x={width! - padding!.right}\n        y={padding!.top - 2 * labelMargin}\n        style={yearTextStyle}\n        text={`Año: ${data.current!.times[frame]}`}\n      />\n      <VictoryAxis\n        dependentAxis\n        crossAxis={false}\n        style={singleLineGridStyle}\n        tickCount={11}\n        tickFormat={(t) => Math.abs(t / data.current!.factor)}\n        label={data.current!.label}\n      />\n      <VictoryAxis offsetX={padding!.left} />\n      <VictoryBar\n        data={data.current!.left}\n        x=\"group\"\n        y={(datum: PlotData) => datum.values[frame]}\n        style={purpleBarStyle}\n        barRatio={1}\n      />\n      <VictoryBar\n        data={data.current!.right}\n        x=\"group\"\n        y={(datum: PlotData) => datum.values[frame]}\n        style={yellowBarStyle}\n        barRatio={1}\n      />\n      <VictoryLabel\n        x={padding!.left + labelMargin}\n        y={padding!.top + labelMargin}\n        style={leftNumberStyle}\n        text={[\n          (-data.current!.totalsLeft[frame]).toLocaleString('es-MX'),\n          `(${(100 * -data.current!.totalsLeft[frame] / data.current!.totals[frame]).toFixed(1)}%)`,\n        ]}\n      />\n      <VictoryLabel\n        x={width! - padding!.right - labelMargin}\n        y={padding!.top + labelMargin}\n        style={rightNumberStyle}\n        text={[\n          (data.current!.totalsRight[frame]).toLocaleString('es-MX'),\n          `(${(100 * data.current!.totalsRight[frame] / data.current!.totals[frame]).toFixed(1)}%)`,\n        ]}\n      />\n      <VictoryLabel\n        x={width! / 2 - labelMargin}\n        y={padding!.top - labelMargin}\n        style={totalsTextStyle}\n        text=\"Total: \"\n      />\n      <VictoryLabel\n        x={width! / 2 + labelMargin}\n        y={padding!.top - labelMargin}\n        style={totalsNumberStyle}\n        text={data.current!.totals[frame].toLocaleString('es-MX')}\n      />\n    </VictoryChart>\n  );\n}\n\nexport default Pyramid;","import React from 'react';\nimport {\n  Deck, Slide, Heading, Text, Image, FlexBox,\n} from 'spectacle';\nimport Pyramid from './components/Pyramid';\nimport lentes from './images/lentes.svg';\n\nconst theme = {\n  colors: {\n    primary: 'white',\n    secondary: '#fffd38',\n    tertiary: '#22466a',\n  },\n};\n\nfunction Presentation() {\n  return (\n    <Deck theme={theme}>\n      <Slide>\n        <FlexBox>\n          <Image src={lentes} />\n          <Heading>\n            Del machismo ancestral a un nuevo paradigma de la masculinidad\n          </Heading>\n        </FlexBox>\n        <Text textAlign=\"center\" fontSize=\"h3\">\n          Una alternativa para la reconciliación\n          y la equidad entre hombres y mujeres\n        </Text>\n        <Text textAlign=\"right\">\n          Ing. Arturo E. Rosales Jaime\n        </Text>\n      </Slide>\n      <Slide>\n        <FlexBox bg=\"grey\" width=\"60%\" height=\"100%\" alignSelf=\"center\">\n          <svg\n            viewBox=\"0 0 450 350\"\n            style={{\n              background: '#ccdee8',\n              boxSizing: 'border-box',\n              display: 'inline',\n              padding: 0,\n              fontFamily: \"'Fira Sans', sans-serif\",\n              width: '100%',\n              height: 'auto',\n            }}\n          >\n            <rect x=\"0\" y=\"0\" width=\"10\" height=\"30\" fill=\"#f01616\" />\n          </svg>\n        </FlexBox>\n      </Slide>\n      <Slide>\n        <Pyramid file=\"Nacional1910_v2\" />\n      </Slide>\n      <Slide>\n        <Heading>Siguiente</Heading>\n      </Slide>\n    </Deck>\n  );\n}\n\nexport default Presentation;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Presentation from './Presentation';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Presentation />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lentes.22f42be4.svg\";"],"sourceRoot":""}